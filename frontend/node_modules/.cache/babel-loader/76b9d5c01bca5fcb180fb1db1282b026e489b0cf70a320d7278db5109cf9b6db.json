{"ast":null,"code":"var _jsxFileName = \"M:\\\\Projects\\\\language-translation-app\\\\frontend\\\\src\\\\components\\\\TranslationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ArrowLeftRight, Copy, Volume2, RotateCcw } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranslationForm = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [translatedText, setTranslatedText] = useState('');\n  const [fromLanguage, setFromLanguage] = useState('auto');\n  const [toLanguage, setToLanguage] = useState('es');\n  const [languages, setLanguages] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [detectedLanguage, setDetectedLanguage] = useState('');\n  const commonLanguages = React.useMemo(() => ({\n    'auto': 'Auto-detect',\n    'en': 'English',\n    'es': 'Spanish',\n    'fr': 'French',\n    'de': 'German',\n    'it': 'Italian',\n    'pt': 'Portuguese',\n    'ru': 'Russian',\n    'ja': 'Japanese',\n    'ko': 'Korean',\n    'zh': 'Chinese (Simplified)',\n    'ar': 'Arabic',\n    'hi': 'Hindi'\n  }), []);\n  const fetchSupportedLanguages = React.useCallback(async () => {\n    try {\n      const response = await axios.get('/api/languages');\n      setLanguages(response.data.translation || {});\n    } catch (error) {\n      console.error('Error fetching languages:', error);\n      setLanguages(commonLanguages);\n    }\n  }, [commonLanguages]);\n  useEffect(() => {\n    fetchSupportedLanguages();\n  }, [fetchSupportedLanguages]);\n  const handleTranslate = async () => {\n    if (!inputText.trim()) {\n      setError('Please enter text to translate');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      const response = await axios.post('/api/translate', {\n        text: inputText,\n        from: fromLanguage === 'auto' ? undefined : fromLanguage,\n        to: toLanguage\n      });\n      setTranslatedText(response.data.translatedText);\n      if (response.data.detectedLanguage) {\n        setDetectedLanguage(response.data.detectedLanguage.language);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Translation failed');\n      console.error('Translation error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSwapLanguages = () => {\n    if (fromLanguage !== 'auto') {\n      setFromLanguage(toLanguage);\n      setToLanguage(fromLanguage);\n      setInputText(translatedText);\n      setTranslatedText(inputText);\n    }\n  };\n  const handleCopy = text => {\n    navigator.clipboard.writeText(text);\n  };\n  const handleSpeak = (text, lang) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = lang;\n      speechSynthesis.speak(utterance);\n    }\n  };\n  const handleClear = () => {\n    setInputText('');\n    setTranslatedText('');\n    setError('');\n    setDetectedLanguage('');\n  };\n  const getLanguageName = code => {\n    var _languages$code;\n    if (code === 'auto') return 'Auto-detect';\n    return ((_languages$code = languages[code]) === null || _languages$code === void 0 ? void 0 : _languages$code.name) || commonLanguages[code] || code;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"translation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: fromLanguage,\n          onChange: e => setFromLanguage(e.target.value),\n          className: \"language-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"auto\",\n            children: \"Auto-detect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), Object.entries(commonLanguages).slice(1).map(([code, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: code,\n            children: name\n          }, code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSwapLanguages,\n        className: \"swap-button\",\n        disabled: fromLanguage === 'auto',\n        title: \"Swap languages\",\n        children: /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-dropdown\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: toLanguage,\n          onChange: e => setToLanguage(e.target.value),\n          className: \"language-select\",\n          children: Object.entries(commonLanguages).slice(1).map(([code, name]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: code,\n            children: name\n          }, code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"translation-boxes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-area-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [getLanguageName(fromLanguage), detectedLanguage && fromLanguage === 'auto' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detected-lang\",\n              children: [\" (Detected: \", getLanguageName(detectedLanguage), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClear,\n              className: \"control-btn\",\n              title: \"Clear text\",\n              children: /*#__PURE__*/_jsxDEV(RotateCcw, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSpeak(inputText, fromLanguage === 'auto' ? detectedLanguage : fromLanguage),\n              className: \"control-btn\",\n              disabled: !inputText,\n              title: \"Speak text\",\n              children: /*#__PURE__*/_jsxDEV(Volume2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"Enter text to translate...\",\n          className: \"text-area input-area\",\n          rows: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-area-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: getLanguageName(toLanguage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCopy(translatedText),\n              className: \"control-btn\",\n              disabled: !translatedText,\n              title: \"Copy translation\",\n              children: /*#__PURE__*/_jsxDEV(Copy, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSpeak(translatedText, toLanguage),\n              className: \"control-btn\",\n              disabled: !translatedText,\n              title: \"Speak translation\",\n              children: /*#__PURE__*/_jsxDEV(Volume2, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: translatedText,\n          readOnly: true,\n          placeholder: \"Translation will appear here...\",\n          className: \"text-area output-area\",\n          rows: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"translation-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTranslate,\n        disabled: isLoading || !inputText.trim(),\n        className: \"translate-button\",\n        children: isLoading ? 'Translating...' : 'Translate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(TranslationForm, \"/QmFCu7wHqC981o/iTCNe+66utM=\");\n_c = TranslationForm;\nexport default TranslationForm;\nvar _c;\n$RefreshReg$(_c, \"TranslationForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","ArrowLeftRight","Copy","Volume2","RotateCcw","jsxDEV","_jsxDEV","TranslationForm","_s","inputText","setInputText","translatedText","setTranslatedText","fromLanguage","setFromLanguage","toLanguage","setToLanguage","languages","setLanguages","isLoading","setIsLoading","error","setError","detectedLanguage","setDetectedLanguage","commonLanguages","useMemo","fetchSupportedLanguages","useCallback","response","get","data","translation","console","handleTranslate","trim","post","text","from","undefined","to","language","_error$response","_error$response$data","handleSwapLanguages","handleCopy","navigator","clipboard","writeText","handleSpeak","lang","window","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","handleClear","getLanguageName","code","_languages$code","name","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","slice","map","onClick","disabled","title","size","placeholder","rows","readOnly","_c","$RefreshReg$"],"sources":["M:/Projects/language-translation-app/frontend/src/components/TranslationForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ArrowLeftRight, Copy, Volume2, RotateCcw } from 'lucide-react';\r\n\r\nconst TranslationForm = () => {\r\n  const [inputText, setInputText] = useState('');\r\n  const [translatedText, setTranslatedText] = useState('');\r\n  const [fromLanguage, setFromLanguage] = useState('auto');\r\n  const [toLanguage, setToLanguage] = useState('es');\r\n  const [languages, setLanguages] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [detectedLanguage, setDetectedLanguage] = useState('');\r\n\r\n  const commonLanguages = React.useMemo(() => ({\r\n    'auto': 'Auto-detect',\r\n    'en': 'English',\r\n    'es': 'Spanish',\r\n    'fr': 'French',\r\n    'de': 'German',\r\n    'it': 'Italian',\r\n    'pt': 'Portuguese',\r\n    'ru': 'Russian',\r\n    'ja': 'Japanese',\r\n    'ko': 'Korean',\r\n    'zh': 'Chinese (Simplified)',\r\n    'ar': 'Arabic',\r\n    'hi': 'Hindi'\r\n  }), []);\r\n\r\n  const fetchSupportedLanguages = React.useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/languages');\r\n      setLanguages(response.data.translation || {});\r\n    } catch (error) {\r\n      console.error('Error fetching languages:', error);\r\n      setLanguages(commonLanguages);\r\n    }\r\n  }, [commonLanguages]);\r\n\r\n  useEffect(() => {\r\n    fetchSupportedLanguages();\r\n  }, [fetchSupportedLanguages]);\r\n\r\n  const handleTranslate = async () => {\r\n    if (!inputText.trim()) {\r\n      setError('Please enter text to translate');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post('/api/translate', {\r\n        text: inputText,\r\n        from: fromLanguage === 'auto' ? undefined : fromLanguage,\r\n        to: toLanguage\r\n      });\r\n\r\n      setTranslatedText(response.data.translatedText);\r\n      if (response.data.detectedLanguage) {\r\n        setDetectedLanguage(response.data.detectedLanguage.language);\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.error || 'Translation failed');\r\n      console.error('Translation error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSwapLanguages = () => {\r\n    if (fromLanguage !== 'auto') {\r\n      setFromLanguage(toLanguage);\r\n      setToLanguage(fromLanguage);\r\n      setInputText(translatedText);\r\n      setTranslatedText(inputText);\r\n    }\r\n  };\r\n\r\n  const handleCopy = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n\r\n  const handleSpeak = (text, lang) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = lang;\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setInputText('');\r\n    setTranslatedText('');\r\n    setError('');\r\n    setDetectedLanguage('');\r\n  };\r\n\r\n  const getLanguageName = (code) => {\r\n    if (code === 'auto') return 'Auto-detect';\r\n    return languages[code]?.name || commonLanguages[code] || code;\r\n  };\r\n\r\n  return (\r\n    <div className=\"translation-container\">\r\n      <div className=\"language-selector\">\r\n        <div className=\"language-dropdown\">\r\n          <select \r\n            value={fromLanguage} \r\n            onChange={(e) => setFromLanguage(e.target.value)}\r\n            className=\"language-select\"\r\n          >\r\n            <option value=\"auto\">Auto-detect</option>\r\n            {Object.entries(commonLanguages).slice(1).map(([code, name]) => (\r\n              <option key={code} value={code}>{name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button \r\n          onClick={handleSwapLanguages}\r\n          className=\"swap-button\"\r\n          disabled={fromLanguage === 'auto'}\r\n          title=\"Swap languages\"\r\n        >\r\n          <ArrowLeftRight size={20} />\r\n        </button>\r\n\r\n        <div className=\"language-dropdown\">\r\n          <select \r\n            value={toLanguage} \r\n            onChange={(e) => setToLanguage(e.target.value)}\r\n            className=\"language-select\"\r\n          >\r\n            {Object.entries(commonLanguages).slice(1).map(([code, name]) => (\r\n              <option key={code} value={code}>{name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"translation-boxes\">\r\n        <div className=\"input-section\">\r\n          <div className=\"text-area-header\">\r\n            <span>\r\n              {getLanguageName(fromLanguage)}\r\n              {detectedLanguage && fromLanguage === 'auto' && (\r\n                <span className=\"detected-lang\"> (Detected: {getLanguageName(detectedLanguage)})</span>\r\n              )}\r\n            </span>\r\n            <div className=\"text-controls\">\r\n              <button \r\n                onClick={handleClear}\r\n                className=\"control-btn\"\r\n                title=\"Clear text\"\r\n              >\r\n                <RotateCcw size={16} />\r\n              </button>\r\n              <button \r\n                onClick={() => handleSpeak(inputText, fromLanguage === 'auto' ? detectedLanguage : fromLanguage)}\r\n                className=\"control-btn\"\r\n                disabled={!inputText}\r\n                title=\"Speak text\"\r\n              >\r\n                <Volume2 size={16} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <textarea\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            placeholder=\"Enter text to translate...\"\r\n            className=\"text-area input-area\"\r\n            rows=\"6\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"output-section\">\r\n          <div className=\"text-area-header\">\r\n            <span>{getLanguageName(toLanguage)}</span>\r\n            <div className=\"text-controls\">\r\n              <button \r\n                onClick={() => handleCopy(translatedText)}\r\n                className=\"control-btn\"\r\n                disabled={!translatedText}\r\n                title=\"Copy translation\"\r\n              >\r\n                <Copy size={16} />\r\n              </button>\r\n              <button \r\n                onClick={() => handleSpeak(translatedText, toLanguage)}\r\n                className=\"control-btn\"\r\n                disabled={!translatedText}\r\n                title=\"Speak translation\"\r\n              >\r\n                <Volume2 size={16} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <textarea\r\n            value={translatedText}\r\n            readOnly\r\n            placeholder=\"Translation will appear here...\"\r\n            className=\"text-area output-area\"\r\n            rows=\"6\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"translation-actions\">\r\n        <button \r\n          onClick={handleTranslate}\r\n          disabled={isLoading || !inputText.trim()}\r\n          className=\"translate-button\"\r\n        >\r\n          {isLoading ? 'Translating...' : 'Translate'}\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TranslationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}